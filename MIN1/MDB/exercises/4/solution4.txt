Aufgabe 1:
==========

 $ echo '{ "Name": "Shodan", "Age":30102 }' > f1.json
 $ echo '<ki><name>Hal9000</name><age>32</age></ki>' > f2.xml
 $ python3
Python 3.9.7 (default, Sep 10 2021, 14:59:43) 
[GCC 11.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import json
>>> import bson
>>> import jxmlease
>>> import yaml
>>> f1 = json.loads(open("f1.json","r").read())
>>> f2 = jxmlease.parse(open("f2.xml","r").read())
>>> open("f.bson", "ab").write(bson.encode(f1))
31
>>> open("f.bson", "ab").write(bson.encode(f2))
44
>>> 
 $ bsondump f.bson
{"Name":"Shodan","Age":{"$numberInt":"30102"}}
{"ki":{"name":"Hal9000","age":"32"}}
2022-04-26T16:16:31.071+0200	2 objects found
 $ hexedit f.bson
 $ bsondump f.bson
{"Name":"Shodan","Age":{"$numberInt":"30103"}}
{"ki":{"name":"Hal9000","age":"32"}}
2022-04-26T16:17:01.376+0200	2 objects found
 $ 

 
 
Aufgabe 2:
==========
 
>>> import urllib.request
>>> import yaml
>>> import json
>>> import jxmlease
>>> d1 = json.loads(urllib.request.urlopen("https://api.coindesk.com/v1/bpi/currentprice/BTC.json").read())
>>> d2 = json.loads(urllib.request.urlopen("https://api.coindesk.com/v1/bpi/currentprice/CNY.json").read())
>>> data = [d1, d2]
>>> open("data.yaml","w").write(yaml.dump(data))
993
>>> open("data.xml","w").write(jxmlease.emit_xml(data))


Aufgabe 3:
==========
 
{
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "id": {
        "type": "number",
        "minimum": 1,
        "multipleOf": 1
      },
      "name": {
        "type": "object",
        "properties": {
          "first": { "type": "string" },
          "middle": { "type": "string" },
          "last": { "type": "string" }
        }
      },
      "info": {
        "type": "object",
        "birthdate": {
          "type": "string",
          "format": "date-time"
        },
        "gender": { "enum": ["Female", "Male"] }
      },
      "sizes": {
        "type":"object",
        "properties": {
          "height": {
            "type": "object",
            "properties": {
              "unit": { "enum": ["cm","m"] },
              "number": {
                "type": "number",
                "minimum": 0,
                "multipleOf": 0.01
              }
            }
          },
          "weight": {
            "type": "object",
            "properties": {
              "unit": { "enum": ["kg","g"] },
              "number": {
                "type": "number",
                "minimum": 0,
                "multipleOf": 0.1
              }
            }
          }
        }
      }
    },
    "additionalProperties": false
  }
}



